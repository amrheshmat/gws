@using MWS.Business.Shared.Data.Models
@using Newtonsoft.Json
@using TripBusiness.Ibusiness
@model MWS.Data.ViewModels.BlogViewModel;
@inject ILocalizationService _localizationService;
@{
    ViewData["Title"] = "Admin Page";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var value = ViewContext.HttpContext.Session.GetString("currentUser");
    UserDTO currentUser = JsonConvert.DeserializeObject<UserDTO>(value);
    var hasAddPermission = currentUser?.permissions.Where(e => e.permissionAction == "add" && e.permissionArea == "blog").ToList().Count;
    var hasEditPermission = currentUser?.permissions.Where(e => e.permissionAction == "edit" && e.permissionArea == "blog").ToList().Count;
    var hasDeletePermission = currentUser?.permissions.Where(e => e.permissionAction == "delete" && e.permissionArea == "blog").ToList().Count;

    var blogs = ViewBag.blogs;
    var languages = ViewBag.languages;
}
    <div class="row">
    <div class="col-xl-10 col-lg-10 col-md-10 col-sm-10" style="margin:50px auto">
        <div id="contextual-classes" class="row">
            <h2 class="col-11">@_localizationService.Localize("Blog")</h2>
            @if (hasAddPermission > 0)
            {
                <div class="col-xl-3 col-lg-6 col-md-6">
                    <div class="card" style="min-height:140px;margin-bottom: 10px;">
                        <div class="row">
                            <div>
                                <img src="/images/manage-cms.png" class="img-fluid" alt="Image" width="120" data-app-light-img="illustrations/lady-with-laptop-light.png" data-app-dark-img="illustrations/lady-with-laptop-dark.png" style="visibility: visible;">
                            </div>
                            <div class="card-body ps-sm-0">
                                <span class="btn btn-primary" onclick="openAddModal()"><i class="fa fa-plus" style="margin:0px 10px;"></i> Add</span>
                                <p class="mb-0" style="margin-top: 15px; text-align: left;">
                                    Add new Blog
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
            <div class="card">
                <div class="p-0 card-body">
                    <div class="tab-content">
                        <div role="tabpanel" id="react-aria-101-tabpane-design" aria-labelledby="react-aria-101-tab-design" class="fade pb-4 p-4 tab-pane active show">
                        <table id="demoGrid" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                            <thead class="thead-light">
                                <tr>
                                    <th scope="col">Title</th>
                                    <th scope="col">@_localizationService.Localize("language")</th>
                                    <th scope="col">active</th>
                                    <th scope="col">actions</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
<!-- add Modal -->
<div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-labelledby="addModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addModalLabel">@_localizationService.Localize("Blog")</h5>
                <button type="button" class="close" onclick="closeModal()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("Add", "Blog", FormMethod.Post, new { enctype = "multipart/form-data", id = "addForm" }))
            {
                @Html.TextBoxFor(m => m.blogId, new { @id = "blogId", @class = "form-control", style = "display:none" })
                <div class="container" style="width:95%;">
                    <div class="row">
                        <div class="col-xs-12 col-md-12" style="margin:10px 0px;">
                            <label class="form-label" for="title">
                                @_localizationService.Localize("title")
                            </label>
                            @Html.TextAreaFor(m => m.title, new { @id = "title", @class = "form-control" })
                            <span id="titleRequired" style="color:red"></span>
                        </div>
                        <div class="col-xs-12 col-md-12" style="margin:10px 0px;">
                            <label class="form-label" for="description">
                                @_localizationService.Localize("description")
                            </label>
                            @Html.TextAreaFor(m => m.description, new { @id = "description", @class = "form-control" })
                            <span id="descriptionRequired" style="color:red"></span>
                        </div>
                        <div class="col-xs-12 col-md-12" style="margin:10px 0px;" id="languageDiv">
                            <label class="form-label" for="language">
                                @_localizationService.Localize("language")
                            </label>
                            <select name="languageId" class="form-select" id="language">
                                @foreach (var language in languages)
                                {
                                    <option value="@language.languageId">@language.languageName</option>
                                }
                            </select>
                            <span id="languageRequired" style="color:red"></span>
                        </div>
                        <div id="imagePreview">
                        </div>
                        <div id="selectedImage">
                        </div>
                        <div class="col-xs-12 col-md-12" style="margin-top:10px;">
                            <label class="form-label" for="language">
                                    Blog Images
                            </label>
                        </div>
                        <div class="col-12" style="margin:auto;width:95%;border: 1px solid #32363e; border-radius: 5px;">
                            <input type="file" id="files" name="files" class="form-control" multiple hidden />
                            <i class="fa fa-upload" id="uploadIcon" style="cursor: pointer;font-size: 25px; margin:5px 47%;"></i>
                        </div>
                    </div>
                    <div class="modal-footer" style="border-top:0px;">
                        <button type="submit" class="btn btn-primary">@_localizationService.Localize("Save")</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">@_localizationService.Localize("Cancel")</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script>
    var validateFile = [];
    // Open Add Modal
    function openAddModal() {
        const modalTitle = document.getElementById('addModalLabel');
        modalTitle.textContent = 'Add Blog';
        $('#addForm')[0].reset();
        $('#addModal').modal('show');
        validateFile = [];
        drawFiles();
    }
    // Open Edit Modal
    function openEditModal(id) {
        const modalTitle = document.getElementById('addModalLabel');
        modalTitle.textContent = 'Edit Blog';
        $.ajax({
            url: "/Blog/Edit/" + id,
            type: "GET",
            cache: false,
            success: function (data) {
                $('#title').val(data.title);
                $('#description').val(data.description);
                $('#languageId').val(data.languageId);
                $('#blogId').val(data.blogId);
                getAttachment(id);
            }
        });
        
    }
    function closeModal() {
        $('#addModal').modal('hide');
    }
    function getAttachment(id) {
        $.ajax({
            url: "/Blog/GetAttachmentById/" + id,
            type: "GET",
            cache: false,
            success: function (data) {
                validateFile = [];
                $("#imagePreview").children().remove();
                for (var i = 0; i < data.length; i++) {
                    $("#imagePreview").append('<span style="cursor: pointer;color:#c30707;position: absolute;" onclick="deleteFile(' + i + ')"><i class="fa fa-trash"></i></span>');
                    $("#imagePreview").append('<img style="width:100px;height:100px;" src="/Files/' + data[i].attachmentPath + '" id="' + data[i].blogAttachmentId + '"/>');
                    var getLinkFromImage = $("#" + data[i].blogAttachmentId).attr('src');
                    console.log(getLinkFromImage);
                    fetch(getLinkFromImage)
                        .then((res) => res.blob())
                        .then((myBlob) => {
                            debugger
                            const myFile = new File([myBlob], 'image_'+ i + '.jpg', { type: myBlob.type });
                            console.log(myFile);
                            validateFile.push(myFile);
                        });
                }
                $('#addModal').modal('show');
            }
        });
    }
    
    $(document).ready(function () {
        drowDatatable();
        $("#uploadIcon").on("click", function () {
            $("#files").click();
        });
        $(document).on('change', '#languageId', function () {
            $("#languageId").val($(this).val());
        });
        $('#addForm').on('submit', function (e) {
            showLoader();
            e.preventDefault(); // Prevent the default form submission
            var formData = new FormData(this); // Create a FormData object
            formData.delete("files");
            for (var i = 0; i < validateFile.length; i++) {
                formData.append(i, validateFile[i]);
            }
            $.ajax({
                url: '/Blog/AddOrUpdate', 
                type: 'POST',
                data: formData,
                contentType: false, // Required for FormData
                processData: false, // Required for FormData
                success: function (data) {
                    if (data.status == true) {
                        Swal.fire({
                            title: data.title,
                            text: data.message,
                            icon: "success",
                            timer: 1500
                        });
                        $('#demoGrid').DataTable().ajax.reload(null, false);
                        closeModal();
                    } else {
                        Swal.fire({
                            title: data.title,
                            text: data.message,
                            icon: "error",
                            timer: 1500
                        });
                    }
                    hideLoader();
                }
            });
        });
        $("#files").on("change", function () {
            const [file] = files.files;
            if (file) {
                for (var i = 0; i < files.files.length; i++) {
                    validateFile.push(files.files[i]);
                }
            }
            drawFiles();
        });
    });
    function drowDatatable(){
        const columns = [
            { data: 'title' },
            { data: 'languageName' },
            {
                data: 'isActive',
                render: function (data, type, row) {
                    const checked = data === 'Y' ? 'checked' : '';
                    return `<input type="checkbox" onclick="ActiveBlog(${row.blogId})" ${checked} />`;
                }
            },
            {
                data: null,
                render: function (data, type, row) {
                    let actions = '';
                    actions += `<span style="cursor:pointer; margin: 0px 15px;" onclick="DeleteBlog(${row.blogId})"><i class="fa fa-trash" style="color: #dc3545;"></i></span>`;
                    actions += `<span style="cursor:pointer" onclick="openEditModal(${row.blogId})"><i class="fa fa-edit" style="color:#624bff;"></i></span>`;
                    return actions;
                }
            }
        ];
        const numberOfColumns = 3;
        drawDynamicDataTable('demoGrid', '/getBlogs', columns, numberOfColumns, true);
    }
    function deleteFile(id){
        debugger;
        validateFile.splice(id, 1);
         drawFiles();
    }
    function drawFiles(){
        $("#imagePreview").children().remove();
        debugger;
        if (validateFile.length > 0) {
            for (var i = 0; i < validateFile.length; i++) {
                var image = validateFile[i];
                var id = 'image_' + i;
                $("#imagePreview").append('<span style="cursor: pointer;color:#c30707;position: absolute;z-index: 3;" onclick="deleteFile(' + i + ')"><i class="fa fa-trash"></i></span>');
                $("#imagePreview").append('<img style="width:100px;height:100px;" id="' + id + '"/>');
                $("#" + id).attr("src", URL.createObjectURL(image));
            }
        }
        console.log(validateFile);
    }
    function  ActiveBlog(id) {
        $.ajax({
            url: "/Blog/active/" + id,
            type: "GET",
            cache: false,
            success: function (data) {
                if (data.status == true) {
                    Swal.fire({
                        title: data.title,
                        text: data.message,
                        icon: "success",
                        timer: 1500
                    });
                    $('#demoGrid').DataTable().ajax.reload(null, false);
                    closeModal();
                } else {
                    Swal.fire({
                        title: data.title,
                        text: data.message,
                        icon: "error",
                        timer: 1500
                    });
                }
            }
        });
    }
    function DeleteBlog(id) {
        Swal.fire({
            title: "Delete",
            html: "are you sure delete this blog?",
            showCancelButton: true,
            confirmButtonText: "yes",
            cancelButtonText: "cancel",
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: "/Blog/Delete/" + id,
                    type: "GET",
                    cache: false,
                    success: function (data) {
                        if (data.status == true) {
                            $('#demoGrid').DataTable().ajax.reload(null, false);
                            closeModal();
                        } else {
                            Swal.fire({
                                title: data.title,
                                text: data.message,
                                icon: "error",
                                timer: 1500
                            });
                        }
                    }
                });
            }
        });
        
    }
</script>