@{
    ViewData["Title"] = "Session Booking";
}

<h1>@ViewData["Title"]</h1>

<div id="calendar"></div>
<style>
    .highlighted-slot {
        background-color: #ffeb3b; /* Yellow highlight color */
        border: 2px solid #ff9800; /* Orange border */
    }
</style>
<script>
  
    $(document).ready(function () {
       
        $('#calendar').fullCalendar({
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay'
            },
            defaultView: 'agendaWeek', // Show a daily view by default
            slotDuration: '0:30:00', // Show hourly time slots
            minTime: '00:00:00',  // Start time for the day (e.g., 8 AM)
            maxTime: '24:00:00',  // End time for the day (e.g., 6 PM)
            editable: true,
            // Disable weekends (Saturday and Sunday)
            dayRender: function (date, cell) {
                // Disable Saturday and Sunday
                if (date.day() == 0 || date.day() == 6) {
                    cell.css("background-color", "#f5f5f5");
                    cell.off('click');
                }

                // Disable specific days, like Tuesday and Thursday
                if (date.day() == 2 || date.day() == 4) {
                    cell.css("background-color", "#f5f5f5");
                    cell.off('click');
                }
            },
            dayClick: function (date, jsEvent, view) {
                debugger;
                var selectedDate = date.format('YYYY-MM-DD');
                var selectedHour = date.hour(); // Get the selected hour from the clicked slot
                var selectedMinute = date.minute();; // Get the selected muint from the clicked slot
                selectedHour = String(selectedHour).padStart(2, '0');
                selectedMinute = String(selectedMinute).padStart(2, '0');
                // Construct a Date object with the given date and time (local time)
                var localTime = new Date(`${selectedDate}T${selectedHour}:${selectedMinute}:00`);

                // Convert to UTC by using toISOString() (this returns the time in UTC)
                var utcTime = localTime.toISOString();
                debugger;
                    var confirmed = confirm('Do you want to book this time slot?');
                    if (confirmed) {
                        // Book the slot by calling the BookSlot action
                        $.ajax({
                            url: '/Event/BookSlot',
                            type: 'POST',
                        data: { datetime: utcTime },
                            success: function (response) {
                                if (response.success) {
                                    alert(response.message);

                                    // After successful booking, update the calendar to mark this slot as booked
                                    calendar.fullCalendar('removeEvents', function (event) {
                                        return event.start.format('YYYY-MM-DDTHH') == response.day + "T" + response.hour;
                                    });

                                    // Add the "booked" event to the calendar
                                    calendar.fullCalendar('renderEvent', {
                                        title: 'Booked',
                                        start: response.day + "T" + response.hour + ":00:00",
                                        backgroundColor: 'red', // Mark it with red to indicate it's booked
                                        textColor: 'white'
                                    }, true); // true means stick the event to the calendar

                                    // Optionally, refresh available events after booking
                                    calendar.fullCalendar('refetchEvents');
                                } else {
                                    alert(response.message);
                                }
                            }
                        });
                    }
            },
            eventRender: function (event, element) {
                if (!event.isAvailable) {
                    element.css('background-color', 'gray');  // Make unavailable events gray
                    element.css('cursor', 'not-allowed');  // Change cursor to not-allowed
                    element.attr('title', 'This session is unavailable');
                }
            }
        });
    });
</script>
