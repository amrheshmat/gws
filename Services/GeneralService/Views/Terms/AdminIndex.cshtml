@using MWS.Business.Shared.Data.Models
@using Newtonsoft.Json
@using TripBusiness.Ibusiness
@inject ILocalizationService _localizationService;
@model MWS.Data.Entities.Term;
@{
    ViewData["Title"] = "Admin Page";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var value = ViewContext.HttpContext.Session.GetString("currentUser");
    UserDTO currentUser = JsonConvert.DeserializeObject<UserDTO>(value);
    var hasAddPermission = currentUser?.permissions.Where(e => e.permissionAction == "add" && e.permissionArea == "term").ToList().Count;
    var hasEditPermission = currentUser?.permissions.Where(e => e.permissionAction == "edit" && e.permissionArea == "term").ToList().Count;
    var hasDeletePermission = currentUser?.permissions.Where(e => e.permissionAction == "delete" && e.permissionArea == "term").ToList().Count;
    var terms = ViewBag.terms;
    var languages = ViewBag.languages;
}



<div class="container">
    <div id="contextual-classes" style="margin:50px auto">
        @if (hasAddPermission > 0)
        {
            <div class="col-sm-6 col-xl-3">
                <div class="card" style="min-height:125px;">
                    <div class="row">
                        <div class="col-sm-5">
                            <div>
                                <img src="https://demos.themeselection.com/sneat-bootstrap-html-admin-template/assets/img/illustrations/lady-with-laptop-light.png" class="img-fluid" alt="Image" width="120" data-app-light-img="illustrations/lady-with-laptop-light.png" data-app-dark-img="illustrations/lady-with-laptop-dark.png" style="visibility: visible;">
                            </div>
                        </div>
                        <div class="col-sm-7">
                            <div class="card-body   ps-sm-0">
                                <span class="btn btn-primary" data-toggle="modal" data-target="#exampleModal"><i class="fa fa-plus" style="margin:0px 10px;"></i> Add</span>
                                <p class="mb-0" style="margin-top: 15px; text-align: left;">
                                    Add new FAQ
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="col-xl-12" style="margin:50px auto">
        <div class="card">
            <div class="p-0 card-body">
                <div class="tab-content">
                    <div role="tabpanel" id="react-aria-101-tabpane-design" aria-labelledby="react-aria-101-tab-design" class="fade pb-4 p-4 tab-pane active show">
                        <table id="demoGrid" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                            <thead class="thead-light">
                                <tr>
                                    <th scope="col">
                                        @_localizationService.Localize("title")
                                    </th>
                                    <th scope="col">
                                        @_localizationService.Localize("subject")
                                    </th>
                                    <th scope="col">
                                        @_localizationService.Localize("order")
                                    </th>
                                    <th scope="col">
                                        @_localizationService.Localize("language")
                                    </th>
                                    <th scope="col">
                                        @_localizationService.Localize("Actions")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    int i = 0;
                                }
                                @foreach (var term in terms)
                                {
                                    <tr>
                                        <td>
                                            @term.title
                                        </td>
                                        <td>
                                            @term.subject
                                        </td>
                                        <td>
                                            @term.orderId
                                        </td>
                                        <td>
                                            @term.languageName
                                        </td>
                                        <td>
                                            @if (hasDeletePermission > 0)
                                            {
                                                <span style="margin:0px 5px;cursor:pointer" onclick="DeleteTerm(@term.termId)"><i style="color: #dc3545;" class="fa fa-trash "></i></span>
                                            }
                                            @if (hasEditPermission > 0)
                                            {
                                                <span onclick="editTerm(@term.termId)" class="" style="cursor:pointer" data-toggle="modal" data-target="#exampleModal"><i style="color:#624bff;" class="fa fa-edit"></i></span>
                                            }
                                        </td>
                                    </tr>
                                }


                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<!-- Button trigger modal -->
<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">@_localizationService.Localize("term")</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("add", "term", FormMethod.Post, new { @id = "formUser" }))
                {
                    @Html.TextBoxFor(m => m.termId, new { @id = "termId", @class = "form-control", style = "display:none" })
                    <div class="mb-3">
                        <label class="form-label" for="title">
                            @_localizationService.Localize("title")
                        </label>
                        @Html.TextBoxFor(m => m.title, new { type = "text", @id = "title", @class = "form-control", required = "required" })
                        <span id="titleRequired" style="color:red"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label" for="subject">
                            @_localizationService.Localize("subject")
                        </label>
                        @Html.TextAreaFor(m => m.subject, new { @id = "subject", @class = "form-control", required = "required" })
                        <span id="subjectRequired" style="color:red"></span>
                    </div>
                    <div class="mb-3" id="languageDiv">
                        <label class="form-label" for="language">
                            @_localizationService.Localize("language")
                        </label>
                        @Html.TextBoxFor(m => m.languageId, new { @id = "languageId", @class = "form-control", style = "display:none" })
                        <select name="language" class="form-select" id="language">
                            @foreach (var language in languages)
                            {
                                <option value="@language.languageId">@language.languageName</option>
                            }
                        </select>
                        <span id="languageRequired" style="color:red"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label" for="order">
                            @_localizationService.Localize("order")
                        </label>
                        @Html.TextBoxFor(m => m.orderId, new { type = "number", @id = "order", @class = "form-control", required = "required" })
                        <span id="orderRequired" style="color:red"></span>
                    </div>
                    <div class="d-grid">
                        <button type="submit" class="btn btn-primary" id="formUserBtn">
                            @_localizationService.Localize("Save")
                        </button>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">@_localizationService.Localize("Cancel")</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#exampleModal').on('hidden.bs.modal', function () {
            // do something…
            clearData();
        })
        $('#formUserBtn').on("click", function (e) {
            //validation
            if ($(".modal-body #title").val() == '') {
                $(".modal-body #titleRequired").text("required");
                return false;
            } else {
                $(".modal-body #titleRequired").text("");
            }
            if ($(".modal-body #subject").val() == '') {
                $(".modal-body #subjectRequired").text("required");
                return false;
            } else {
                $(".modal-body #subjectRequired").text("");
            }
            if ($(".modal-body #language").val() == '') {
                $(".modal-body #languageRequired").text("required");
                return false;
            } else {
                $(".modal-body #languageRequired").text("");
            }
            if ($(".modal-body #order").val() == '') {
                $(".modal-body #orderRequired").text("required");
                return false;
            } else {
                $(".modal-body #orderRequired").text("");
            }
            e.preventDefault();
            var userUpdate = {};
            userUpdate.title = $(".modal-body #title").val();
            userUpdate.subject = $(".modal-body #subject").val();
            userUpdate.orderId = $(".modal-body #order").val();
            if ($(".modal-body #termId").val() != '')
                userUpdate.termId = $(".modal-body #termId").val();

            if ($(".modal-body #termId").val() == "") {
                userUpdate.languageId = $(".modal-body #language").val();
                $.ajax({
                    url: "/term/add",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(userUpdate),
                    success: function (data) {
                        if (data.status == true) {
                            Swal.fire({
                                title: data.title,
                                text: data.message,
                                icon: "success",
                                timer: 1500,
                                iconColor: '#132649',
                                confirmButtonColor: '#132649'
                            });
                            setTimeout(function () {
                                location.reload();
                            }, 1500);
                        } else {
                            Swal.fire({
                                title: data.title,
                                text: data.message,
                                icon: "error",
                                timer: 1500,
                                iconColor: '#132649',
                                confirmButtonColor: '#132649'
                            });
                        }
                    },
                    error: function (error) {
                        console.log("e");
                    }
                });
            } else {
                userUpdate.languageId = $(".modal-body #language").val();
                userUpdate.termId = $(".modal-body #termId").val();
                $.ajax({
                    url: "/term/edit",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(userUpdate),
                    success: function (data) {
                        if (data.status == true) {
                            Swal.fire({
                                title: data.title,
                                text: data.message,
                                icon: "success",
                                timer: 1500,
                                iconColor: '#132649',
                                confirmButtonColor: '#132649'
                            });
                            setTimeout(function () {
                                location.reload();
                            }, 1500);
                        } else {
                            Swal.fire({
                                title: data.title,
                                text: data.message,
                                icon: "error",
                                timer: 1500,
                                iconColor: '#132649',
                                confirmButtonColor: '#132649'
                            });
                        }
                    }
                });
            }

        });

        $('#demoGrid').dataTable({
        });
        $(document).on('change', '#language', function () {
            $(".modal-body #language").val($(this).val());
        });
    });
    function DeleteTerm(id) {
        $.ajax({
            url: "/term/Delete/" + id,
            type: "GET",
            cache: false,
            success: function (data) {
                if (data.status == true) {
                    Swal.fire({
                        title: data.title,
                        text: data.message,
                        icon: "success",
                        timer: 1500,
                        iconColor: '#132649',
                        confirmButtonColor: '#132649'
                    });
                    setTimeout(function () {
                        location.reload();
                    }, 1500);
                } else {
                    Swal.fire({
                        title: data.title,
                        text: data.message,
                        icon: "error",
                        timer: 1500,
                        iconColor: '#132649',
                        confirmButtonColor: '#132649'
                    });
                }
            }
        });
    }
    function editTerm(id) {
        $.ajax({
            url: "/term/getTermById/" + id,
            type: "GET",
            cache: false,
            success: function (data) {
                console.log(data);
                $(".modal-body #termId").val(data.termId);
                    $(".modal-body #title").val(data.title);
                $(".modal-body #language").val(data.languageId);
                $(".modal-body #order").val(data.orderId);
                $(".modal-body #subject").val(data.subject);
                }
        });
       
    }
    function clearData() {
        $(".modal-body #termId").val("");
        $(".modal-body #title").val("");
        $(".modal-body #subject").val("");
        $(".modal-body #order").val("");
    }
</script>