@using MWS.Business.Shared.Data.Models
@using Newtonsoft.Json
@using TripBusiness.Ibusiness
@model MWS.Data.Entities.User;
@inject ILocalizationService _localizationService;
@{
    ViewData["Title"] = "Admin Page";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var value = ViewContext.HttpContext.Session.GetString("currentUser");
    UserDTO currentUser = JsonConvert.DeserializeObject<UserDTO>(value);
    var hasAddPermission = currentUser?.permissions.Where(e => e.permissionAction == "add" && e.permissionArea == "user").ToList().Count;
    var hasEditPermission = currentUser?.permissions.Where(e => e.permissionAction == "edit" && e.permissionArea == "user").ToList().Count;
    var hasDeletePermission = currentUser?.permissions.Where(e => e.permissionAction == "delete" && e.permissionArea == "user").ToList().Count;
    var users = ViewBag.users;
    var roles = ViewBag.roles;
    }

<style>
    #demoGrid tr.odd {
        background-color: red!important; /* Light gray color */
    }

</style>

    <div class="container" style="margin-top:50px;">
    <div class="row g-6 mb-6">
        <div class="col-sm-6 col-xl-3">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex align-items-start justify-content-between">
                        <div class="content-left">
                            <span class="text-heading">Session</span>
                            <div class="d-flex align-items-center my-1">
                                <h4 class="mb-0 me-2">21,459</h4>
                                <p class="text-success mb-0">(+29%)</p>
                            </div>
                            <small class="mb-0">Total Users</small>
                        </div>
                        <div class="avatar">
                            <span class="avatar-initial rounded bg-label-primary">
                                <i class="icon-base bx bx-group "></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-xl-3">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex align-items-start justify-content-between">
                        <div class="content-left">
                            <span class="text-heading">Paid Users</span>
                            <div class="d-flex align-items-center my-1">
                                <h4 class="mb-0 me-2">4,567</h4>
                                <p class="text-success mb-0">(+18%)</p>
                            </div>
                            <small class="mb-0">Last week analytics </small>
                        </div>
                        <div class="avatar">
                            <span class="avatar-initial rounded bg-label-danger">
                                <i class="icon-base bx bx-user-plus "></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-xl-3">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex align-items-start justify-content-between">
                        <div class="content-left">
                            <span class="text-heading">Active Users</span>
                            <div class="d-flex align-items-center my-1">
                                <h4 class="mb-0 me-2">19,860</h4>
                                <p class="text-danger mb-0">(-14%)</p>
                            </div>
                            <small class="mb-0">Last week analytics</small>
                        </div>
                        <div class="avatar">
                            <span class="avatar-initial rounded bg-label-success">
                                <i class="icon-base bx bx-user-check "></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-xl-3">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex align-items-start justify-content-between">
                        <div class="content-left">
                            <span class="text-heading">Pending Users</span>
                            <div class="d-flex align-items-center my-1">
                                <h4 class="mb-0 me-2">237</h4>
                                <p class="text-success mb-0">(+42%)</p>
                            </div>
                            <small class="mb-0">Last week analytics</small>
                        </div>
                        <div class="avatar">
                            <span class="avatar-initial rounded bg-label-warning">
                                <i class="icon-base bx bx-user-voice "></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-12" style="margin:50px auto">

        <div id="contextual-classes" class="row">
            <h2 class="col-10"></h2>
            @if (hasAddPermission > 0)
            {
                <span class="col-2 btn btn-primary" onclick="" style="cursor:pointer" data-toggle="modal" data-target="#exampleModal"><i class="fa fa-plus" style="margin:0px 10px;"></i> Add New User</span>
            }
        </div>

            <div class="card">
                <div class="p-0 card-body">
                    <div class="tab-content">
                        <div role="tabpanel" id="react-aria-101-tabpane-design" aria-labelledby="react-aria-101-tab-design" class="fade pb-4 p-4 tab-pane active show">
                        <table id="demoGrid" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                                <thead class="thead-light">
                                    <tr>
                                        <th scope="col">
                                        @_localizationService.Localize("UserName")
                                        </th>
                                        <th scope="col">
                                        @_localizationService.Localize("Mobile")
                                        </th>
                                        <th scope="col">
                                        @_localizationService.Localize("Email")
                                        </th>
                                        <th scope="col">
                                        @_localizationService.Localize("Actions")
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int i = 0;
                                    }
                                    @foreach(var user in users)
                                    {
                                        <tr>
                                            <td>
                                                @user.userName
                                            </td>
                                            <td>
                                                @user.mobile
                                            </td>
                                            <td>
                                                @user.email
                                            </td>
                                            <td>
                                            @if (hasDeletePermission > 0)
                                            {
                                                <span style="margin:0px 5px;cursor:pointer" onclick="DeleteUser(@user.userId)"><i style="color: #dc3545;" class="fa fa-trash "></i></span>
                                            }
                                            @if (hasEditPermission > 0)
                                            {
                                            <span onclick="editUser(@user.userId,'@user.userName','@user.mobile','@user.email','@user.roleId')" class="" style="cursor:pointer" data-toggle="modal" data-target="#exampleModal"><i style="color:#624bff;" class="fa fa-edit"></i></span>
                                            }    
                                        </td>
                                        </tr>
                                    }
                                    
                                    
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



<!-- Button trigger modal -->

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">@_localizationService.Localize("User")</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("add", "user", FormMethod.Post, new { @id = "formUser" }))
                {
                    @Html.TextBoxFor(m => m.userId, new { @id = "userId", @class = "form-control", style = "display:none" })
                    
                        <div class="mb-3">
                            <label class="form-label" for="username">
                            @_localizationService.Localize("UserName")
                            </label>
                        @Html.TextBoxFor(m => m.userName, new { @id = "userName", @class = "form-control", placeholder = "Enter User Name ", required = "required" })
                        <span id="userNameRequired" style="color:red"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label" for="mobile">
                            @_localizationService.Localize("Phone")
                        </label>
                        @Html.TextBoxFor(m => m.mobile, new { @id = "mobile", @class = "form-control", placeholder = "Enter Mobile ", required = "required" })
                        <span id="mobileRequired" style="color:red"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label" for="email">
                            email
                        </label>
                        @Html.TextBoxFor(m => m.email, new { @id = "email", @class = "form-control", placeholder = "Enter email ", required = "required" })
                        <span id="emailRequired" style="color:red"></span>
                    </div>
                    <div class="mb-3" id="passwordDiv">
                        <label class="form-label" for="password">
                            @_localizationService.Localize("Password")
                        </label>
                        @Html.TextBoxFor(m => m.password, new { @id = "password", @class = "form-control", placeholder = "Enter password ", required = "required" })
                        <span id="passwordRequired" style="color:red"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label" for="email">
                            @_localizationService.Localize("role")
                        </label>
                        @Html.TextBoxFor(m => m.roleId, new { @id = "roleId", @class = "form-control", style = "display:none" })
                        <select name="role" class="form-select" id="role">
                            @foreach(var role in roles)
                            {
                                <option value="@role.roleId" >@role.roleName</option>
                            }
                        </select>
                    </div>
                    <div class="d-grid">
                        <button type="submit" class="btn btn-primary" id="formUserBtn">@_localizationService.Localize("Save")</button>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">@_localizationService.Localize("Cancel")</button>
            </div>
        </div>
    </div>
</div>

<script>
    function clearData() {
        $(".modal-body #userId").val("");
        $(".modal-body #userName").val("");
        $(".modal-body #mobile").val("");
        $(".modal-body #email").val("");
    }
    $(document).ready(function () {
        $('#exampleModal').on('hidden.bs.modal', function () {
            clearData();
        })
        $('#formUserBtn').on("click",function (e) {
            //validation
            if ($(".modal-body #email").val() == '') {
                $(".modal-body #emailRequired").text("required");
                return false;
            } else {
                $(".modal-body #emailRequired").text("");
            }
            if ($(".modal-body #mobile").val() == '') {
                $(".modal-body #mobileRequired").text("required");
                return false;
            } else {
                $(".modal-body #mobileRequired").text("");
            }
            if ($(".modal-body #userName").val() == '') {
                $(".modal-body #userNameRequired").text("required");
                return false;
            } else {
                $(".modal-body #userNameRequired").text("");
            }
           
            e.preventDefault();
            var userUpdate = {};
            userUpdate.userName = $(".modal-body #userName").val();
            userUpdate.email = $(".modal-body #email").val();
            userUpdate.mobile = $(".modal-body #mobile").val();
            userUpdate.password = $(".modal-body #password").val();
            if ($(".modal-body #roleId").val() != '')
            userUpdate.roleId = $(".modal-body #roleId").val();

            if ($(".modal-body #userId").val() == "") {
                if ($(".modal-body #password").val() == '') {
                    $(".modal-body #passwordRequired").text("required");
                    return false;
                } else {
                    $(".modal-body #passwordRequired").text("");
                }
                var url = '@Url.Action("Add", "user")';
                $('#formUser').prop('action', url);
                console.log("b");
                $.ajax({
                    url: "/User/Add",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(userUpdate),
                    success: function (data) {
                        if (data.status == true) {
                            Swal.fire({
                                title: data.title,
                                text: data.message,
                                icon: "success",
                                timer: 1500
                            });
                            setTimeout(function () {
                                location.reload();
                            }, 1500);
                        } else {
                            Swal.fire({
                                title: data.title,
                                text: data.message,
                                icon: "error",
                                timer: 1500
                            });
                        }
                    },
                    error: function (error) {
                    }
                });
            } else {
                userUpdate.userId = $(".modal-body #userId").val();
                var url = '@Url.Action("Edit", "user")';
                $('#formUser').prop('action', url);
                $.ajax({
                    url: "/User/Edit",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(userUpdate),
                    success: function (data) {
                        if (data.status == true) {
                            Swal.fire({
                                title: data.title,
                                text: data.message,
                                icon: "success",
                                timer: 1500
                            });
                            setTimeout(function () {
                                location.reload();
                            }, 1500);
                        } else {
                            Swal.fire({
                                title: data.title,
                                text: data.message,
                                icon: "error",
                                timer: 1500
                            });
                        }
                    }
                });
            }
           
        });
        
        $("#datepicker").datepicker({
            beforeShowDay: noMondays
        });
        function noMondays(date) {
            if (date.getDay() === 0)  /* Monday */
                return [false, "closed", "Closed on Monday"]
            else
                return [true, "", ""]
        }
       
        $('#demoGrid').dataTable({
            dom: 'lBfrtip',
            buttons: [
                {
                    extend: 'excel',
                    text: '<i class="fas fa-file-excel" style="margin-right: 10px;"></i> Excel',
                    className: 'btn btn-warning'
                },
                {
                    extend: 'pdf',
                    text: '<i class="fas fa-file-pdf" style="margin-right: 10px;"></i> PDF',
                    className: 'btn btn-danger'
                },
            ],
            "lengthMenu": [10, 20,50,100], // Options for the "Show entries" dropdown
            "pageLength": 10
            // "processing": true, // for show progress bar
            // "serverSide": true, // for process server side
            // "filter": true, // this is for disable filter (search box)
            // "orderMulti": false, // for disable multiple column at once
            // "pageLength": 5,
        });
        $('#demoGrid_filter input').removeClass('form-control-sm');
    });
    $(document).on('change', '#role', function () {

        $(".modal-body #roleId").val($(this).val());
    });
    function showDatePicker() {
        $("#datepicker").datepicker('show'); //Show on click of button
    }
    function DeleteUser(id) {
        $.ajax({
            url: "/User/Delete/" + id,
            type: "GET",
            cache: false,
            success: function (data) {
                if (data.status == true) {
                    Swal.fire({
                        title: data.title,
                        text: data.message,
                        icon: "success",
                        timer: 1500
                    });
                    setTimeout(function () {
                        location.reload();
                    }, 1500);
                } else {
                    Swal.fire({
                        title: data.title,
                        text: data.message,
                        icon: "error",
                        timer: 1500
                    });
                }
            }
        });
    }
    function editUser(id,name,mobile,email,roleId) {
        $('#passwordDiv').hide();
            $(".modal-body #userId").val(id);
            $(".modal-body #userName").val(name);
            $(".modal-body #mobile").val(mobile);
            $(".modal-body #email").val(email);
        $("#role").val(roleId);
        }
</script>
