@using MWS.Business.Shared.Data.Models
@using Newtonsoft.Json
@using TripBusiness.Ibusiness
@inject ILocalizationService _localizationService;
@model MWS.Data.Entities.Role;
@{
    ViewData["Title"] = "Admin Page";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var value = ViewContext.HttpContext.Session.GetString("currentUser");
    UserDTO currentUser = JsonConvert.DeserializeObject<UserDTO>(value);
    var hasAddPermission = currentUser?.permissions.Where(e => e.permissionAction == "add" && e.permissionArea == "role").ToList().Count;
    var hasEditPermission = currentUser?.permissions.Where(e => e.permissionAction == "edit" && e.permissionArea == "role").ToList().Count;
    var hasDeletePermission = currentUser?.permissions.Where(e => e.permissionAction == "delete" && e.permissionArea == "role").ToList().Count;
    var Roles = ViewBag.Roles;
    var permissions = ViewBag.permissions;
    var rolePermissioms = ViewBag.rolePermission;
}



<div class="container" style="margin-top:50px;">
    <div class="container-xxl flex-grow-1 container-p-y">
        <!-- Role cards -->
        <div class="row g-6">
             @foreach (var Role in Roles)
            { 
                if (Role.users.Count > 0)
                {
                    <div class="col-xl-4 col-lg-6 col-md-6">
                        <div class="card" style="min-height:140px;">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center mb-4">
                                    <h6 class="fw-normal mb-0 text-body">Total @Role.users.Count users</h6>
                                <ul class="list-unstyled d-flex align-items-center avatar-group mb-0">
                                        @if (Role.users.Count > 0)
                                        {
                                            int j = 0;
                                            foreach (var user in Role.users)
                                            {
                                                j++;
                                                if(j > 2)
                                                {
                                                    break;
                                                }
                                                <li data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="top" class="avatar pull-up" aria-label="Vinnie Mostowy" data-bs-original-title="Vinnie Mostowy">
                                                    <img class="rounded-circle" src="/images/avatars/1.png" alt="Avatar">
                                                </li>
                                            }
                                        }
                                        @if (Role.users.Count > 4)
                                        {
                                            <li class="avatar">
                                                <span class="avatar-initial rounded-circle pull-up" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-original-title="4 more" aria-describedby="tooltip820970" style="color:#000;font-size:12px;">+4</span>
                                            </li>
                                        }
                                </ul>
                            </div>
                            <div class="d-flex justify-content-between align-items-end">
                                <div class="role-heading">
                                    <h5 class="mb-1">@Role.roleName</h5>
                                    @* <a href="javascript:;" data-bs-toggle="modal" data-bs-target="#addRoleModal" class="role-edit-modal"><span>Edit Role</span></a> *@
                                </div>
                                @* <a href="javascript:void(0);"><i class="icon-base bx bx-copy icon-md text-body-secondary"></i></a> *@
                            </div>
                        </div>
                    </div>
                    </div>
                }
            }
            @if (hasAddPermission > 0)
            {
                <div class="col-xl-4 col-lg-6 col-md-6">
                    <div class="card h-100" style="min-height:140px;">
                    <div class="row h-100">
                        <div class="col-sm-5">
                            <div class="d-flex align-items-end h-100 justify-content-center mt-sm-0 mt-4 ps-6">
                                <img src="https://demos.themeselection.com/sneat-bootstrap-html-admin-template/assets/img/illustrations/lady-with-laptop-light.png" class="img-fluid" alt="Image" width="120" data-app-light-img="illustrations/lady-with-laptop-light.png" data-app-dark-img="illustrations/lady-with-laptop-dark.png" style="visibility: visible;">
                            </div>
                        </div>
                        <div class="col-sm-7">
                            <div class="card-body text-sm-end text-center ps-sm-0">
                                <span class="btn btn-primary" data-toggle="modal" data-target="#exampleModal"><i class="fa fa-plus" style="margin:0px 10px;"></i> Add New Role</span>
                                    <p class="mb-0" style="margin-top: 15px; text-align: left; margin-left: 25px;">
                                    Add new role, <br>
                                    if it doesn't exist.
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            }
        </div>
        <!--/ Role cards -->
    </div>
    <div class="col-xl-12" style="margin:50px auto">
            <div class="card">
                <div class="p-0 card-body">
                    <div class="tab-content">
                        <div role="tabpanel" id="react-aria-101-tabpane-design" aria-labelledby="react-aria-101-tab-design" class="fade pb-4 p-4 tab-pane active show">
                        <table id="demoGrid" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                                <thead class="thead-light">
                                    <tr>
                                        <th scope="col">
                                        @_localizationService.Localize("RoleName")
                                        </th>
                                        <th scope="col">
                                        @_localizationService.Localize("Actions")
                                    </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int i = 0;
                                    }
                                    @foreach(var Role in Roles)
                                    {
                                        <tr>
                                            <td>
                                                @Role.roleName
                                            </td>
                                            <td>
                                            @if (hasDeletePermission > 0)
                                            {
                                                <span style="margin:0px 5px;cursor:pointer" onclick="DeleteRole(@Role.roleId)"><i style="color: #dc3545;" class="fa fa-trash "></i></span>
                                            }
                                            @if (hasEditPermission > 0)
                                            {
                                            <a href="/Role/Edit/@Role.roleId"  class="" style="cursor:pointer" ><i style="color:#624bff;" class="fa fa-edit"></i></a>
                                            }    
                                        </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">@_localizationService.Localize("Add")</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("edit", "Role", FormMethod.Post, new { @id = "formUser" }))
                {
                    @Html.TextBoxFor(m => m.roleId, new { @id = "roleId", @class = "form-control", style = "display:none" })

                        <div class="mb-3">
                            <label class="form-label" for="roleName">
                            @_localizationService.Localize("RoleName")
                            </label>
                            @Html.TextBoxFor(m => m.roleName, new { @id="roleName", @class = "form-control" })
                        <span id="roleNameRequired" style="color:red"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label" for="roleName">
                            @_localizationService.Localize("Permission")
                        </label>
                        <select class="form-select" name="field2" id="field2" multiple multiselect-search="true" multiselect-select-all="true" multiselect-max-items="2" onchange="test(this.selectedOptions)">
                            @foreach (var permission in permissions)
                            {
                                if (rolePermissioms != null)
                                {
                                    foreach (var rolePermission in rolePermissioms)
                                    {
                                        if (rolePermission.permissionId == permission.permissionId)
                                        {
                                            <option selected value="@permission.permissionId" id="@permission.permissionId">@permission.permissionName</option>
                                        }
                                    }

                                }
                                <option value="@permission.permissionId" id="@permission.permissionId">@permission.permissionName</option>
                            }
                        </select>
                        
                        <span id="permissionIdRequired" style="color:red"></span>
                    </div>
                    <div class="d-grid">
                        <button type="submit" class="btn btn-primary" id="formUserBtn">@_localizationService.Localize("Save")</button>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">@_localizationService.Localize("Cancel")</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('.modal').on('shown.bs.modal', function (e) {
            var id = $("#roleId").val();
            $.ajax({
                url: "/Role/GetPermissionById/" + id,
                type: "GET",
                cache: false,
                success: function (data) {
                }
            });
        })
        $('#demoGrid').dataTable({
            "lengthMenu": [10, 20, 50, 100], // Options for the "Show entries" dropdown
            "pageLength": 10
            // "processing": true, // for show progress bar
            // "serverSide": true, // for process server side
            // "filter": true, // this is for disable filter (search box)
            // "orderMulti": false, // for disable multiple column at once
            // "pageLength": 5,
        });
        $('#demoGrid_filter input').removeClass('form-control-sm');

        $('#formUserBtn').on("click", function (e) {
            //validation
            if ($(".modal-body #roleName").val() == '') {
                $(".modal-body #roleNameRequired").text("required");
                return false;
            } else {
                $(".modal-body #roleNameRequired").text("");
            }
            if ($(".modal-body #permissionId").val() == '') {
                $(".modal-body #permissionIdRequired").text("required");
                return false;
            } else {
                $(".modal-body #permissionIdRequired").text("");
            }
            e.preventDefault();
            var selectedPermissions = [];
            for (var i = 0; i < $("#field2").val().length; i++) {
                var permission = {
                    "permissionId": $("#field2").val()[i],
                };
                selectedPermissions.push(permission);
            }
            var userUpdate = {};
            userUpdate.roleName = $(".modal-body #roleName").val();
            userUpdate.permissions = selectedPermissions;
            if ($(".modal-body #roleId").val() == "") {
                $.ajax({
                    url: "/Role/Add",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(userUpdate),
                    success: function (data) {
                        if (data.status == true) {
                            Swal.fire({
                                title: data.title,
                                text: data.message,
                                icon: "success",
                                timer: 1500
                            });
                            setTimeout(function () {
                                location.reload();
                            }, 1500);
                        } else {
                            Swal.fire({
                                title: data.title,
                                text: data.message,
                                icon: "error",
                                timer: 1500
                            });
                        }
                    },
                    error: function (error) {
                       
                    }
                });
            } else {
                $.ajax({
                    url: "/Role/Edit",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(userUpdate),
                    success: function (data) {
                        if (data.status == true) {
                            Swal.fire({
                                title: data.title,
                                text: data.message,
                                icon: "success",
                                timer: 1500
                            });
                            setTimeout(function () {
                                location.reload();
                            }, 1500);
                        } else {
                            Swal.fire({
                                title: data.title,
                                text: data.message,
                                icon: "error",
                                timer: 1500
                            });
                        }
                    }
                });
            }

        });
    });
    function DeleteRole(id) {
        $.ajax({
            url: "/Role/Delete/" + id,
            type: "GET",
            cache: false,
            success: function (data) {
                if (data.status == true) {
                    Swal.fire({
                        title: data.title,
                        text: data.message,
                        icon: "success",
                        timer: 1500
                    });
                    setTimeout(function () {
                        location.reload();
                    }, 1500);
                } else {
                    Swal.fire({
                        title: data.title,
                        text: data.message,
                        icon: "error",
                        timer: 1500
                    });
                }
            }
        });
    }
        function test(selectedOptions) {
            debugger;
            var val = "";
            for (var i = 0; i < selectedOptions.length; i++) {
                val += selectedOptions[i].id + ",";
            }
            $(".modal-body #permissionId").val(val);
        }
</script>